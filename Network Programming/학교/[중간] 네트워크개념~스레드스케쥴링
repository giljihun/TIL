# 😎 중간고사까지의 내용 정리

### 네트워크 : 실시간으로 정보를 주고 받을 수 있는 컴퓨터 및 다른 장치들의 집합.
### 노드 : 네트워크 안의 각각의 장비.
### 호스트 : 노드 중에서 일반적으로 PC를 의미.
### 주소 : 네트워크 안에서 노드를 고유하게 식별하는 바이트 순서.
- 주소는 네트워크의 종류에 따라 다르게 할당된다. (ex. 이더넷은 이더넷끼리 등)
- IPv4 : 32bits(=4bytes)를 8bits씩 끊어서 10진수로 표현한 것.
- IPv6 : 128bits(=16bytes)
### 프로토콜 : 컴퓨터의 통신 방법을 정의한 정밀한 규칙의 집합.
- ex. 주소의 형식, 데이터를 패킷으로 나누는 방법 등을 정의

## 네트워크 계층
- 네트워크를 몇 개의 계층으로 분리함으로써 계층 간 인터페이스가 변경되지 않는 한, 하나의 계층 안에 있는 소프트웨어를 다른 계층에 미치는 영향 없이 수정하거나 대체할 수 있다.
### Host-to-Network layer (= Datalink layer) 
: 특정 네트워크 인터페이스가 물리적인 연결을 통해 로컬 네트워크 및 외부로 IP 데이터그램을 보내는 방법을 정의

### Internet layer (= Network layer)
: 데이터의 비트와 바이트를 좀 더 큰 그룹인 패킷으로 구성하는 방법과 다른 컴퓨터가 서로를 찾을 수 있도록 주소 체계를 정의
- IPv4, IPv6 둘 다 데이터는 데이터그램이라는 패킷으로 인터넷 계층을 통해 보내진다.
- 빅엔디안 : 왼쪽에서 오른쪽으로 최상위 비트에서 최하위 비트 순으로 정렬.

### Transport layer 
: 말그대로 전송 계층인데, 패킷이 받아지는 순서 혹은 받아진 상태에 대해 검증 및 보장한다. (TCP만 해당된다.)
- TCP : has 'Sequence number' -> Reliable protocol이라고도 부른다. -> 느린 속도
- UDP : does not have 'Sequence number' -> Unreliable protocol -> 빠른 속도
> 여기까지의 계층은 하나의 컴퓨터에서 다른 컴퓨터로 데이터가 전송되는 방법을 정의

### Application layer
: 사용자에게 데이터가 전달되는 계층 -> 해당 데이터로 어떤 일을 해야할 지 정의.  
ex. WWW의 HTTP 프로토콜 : 웹 브라우저가 그래픽 이미지를 숫자들의 스트림이 아닌 그림으로 출력하게 함, 이메일을 위한 SMTP, POP 등

```htm
Application layer ← 논리적인 경로

Transport layer (TCP, UDP)  

Network layer (Internet Layer)(IP)  

Datalink Layer / Physical Layer ← 물리적인 경로(WiFi, 이더넷, LTE 등)
```
##  OSI 7계층 모델을 기반으로 한 데이터의 전송 과정
> 어떻게 데이터가 패킷화, 인코딩, 전송, 디코딩, 재조립되어 최종적으로 사용자의 어플리케이션에서 사용될 수 있는 지를 알아보자.
1. 전송 계층은 전달받은 요청을 TCP 세그먼트 단위로 쪼개고, 순서번호와 체크섬값을 추가하여 네트워크 계층으로 전달.
2. 네트워크 계층은 세그먼트를 로컬 네트워크에 필요한 크기에 맞게 IP 데이터그램으로 쪼갠 후, 데이터링크 계층으로 전달.
3. 데이터링크 계층은 아날로그 신호로 인코딩하여 물리적 경로를 통해 전송
4. 전송 받은 데이터링크 계층에서는 디지털 신호로 디코딩(디코딩 결과물은 IP 데이터그램인거지.)하여 네트워크 계층으로 전달.
5. 네트워크 계층은 IP 데이터그램의 손실 여부를 판별(손실 됐다면, 재전송 요청)하여 전송계층으로 전달.
6. 전송계층에서는 따로 따로 왔던 패킷을 순서번호를 통해 재조립하여 어플리케이션 계층으로 전달.
7. 어플리케이션 계층은 받은 데이터를 토대로 사용자에게 데이터를 어떻게 처리할 것인지 표현.

## IP Address
1) IPv4 : 주소는 32bits(=4bytes)의 값을 가지는데, IPv4는 이를 8bits씩 끊어서 10진수로 표현한 것.
<p align="center"><img src="image.png" width="70%">  

-> 한 줄당 32bits(=4bytes)
-> IPv4의 헤더는 기본적으로 20bytes이다. (옵션, 패딩을 제외하면 5줄이잖! 최대 60bytes.)
- Version : 버전
- IHL(=Header Length) : 헤더의 길이
- Total Length : 헤더를 포함한 패킷의 길이
- ToS : 서비스 품질
- Identification : 각 조갇이 동일한 데이터그램이라면 일련번호가 같다
- TTL : IP패킷의 수명 (라우팅할 때 무한루프에 빠지지 않기 위함.)
- Protocol(Protocol ID) : 어느 상위계층 프로토콜에서 왔는 지
- Header Checksum : 네트워크를 통해 패킷이 전송될 때 발생한 오류를 검출하기 위해 사용하는 영역 (헤더의 손상만 알 수 있다, 데이터 부분은 모른다!)

2) IPv6 : 128bits를 16bits로 쪼개서 8개로 표현 그리고 16진수로 표현한다. (<-> IPv4는 10진수)  
> 128비트를 16비트씩 쪼개면 8개의 그룹이 된다, 각 16비트 그룹은 16진수 2자리로 표현이 가능하다!  
> 따라서, 8개의 16진수 그룹으로 주소를 표현한다. 
- IPv4의 주소 공간 부족 문제를 해결하기 위해 도입
- 현재 잘 쓰이지는 않고있다. 그래서 '0'이 매우 많음
- [FEDC:0000:0000:0000:00DC:0000:7076:0010] -> [FEDC::DC:0:7076:10]
- IPv6의 경우에는 40bytes가 최소 길이다

## DNS (Domain Name Service)
<p align="center"><img src="image-15.png" width=30%>  
  
- 컴퓨터 네트워크에서 사용되는 주소 체계로, 이해하기 쉽지 않은 숫자로 된 IP 주소를 사람이 이해하기 쉬운 호스트 이름(예: www.naver.com)으로 변환해주는 시스템
- DNS는 호스트 이름과 IP 주소 간의 상호 변환을 지원하여 네트워크에서 원활한 통신을 가능하게 한다
- DNS는 인터넷에서 웹 브라우징, 이메일, 파일 전송 등의 다양한 네트워크 활동에서 중요한 역할을 하며, 웹사이트를 찾거나 서버에 연결하는 데 필수적인 구성 요소 중 하나
> ex. "www.naver.com"이라는 호스트 이름은 사람들이 쉽게 기억할 수 있지만, 컴퓨터에게는 그 자체로는 의미가 없는 문자.  
> 따라서, 컴퓨터는 "www.naver.com"을 해당 웹사이트의 IP 주소(예: 203.0.113.0)로 변환.

## DHCP (Dynamic Host Configuration Protocol)
- IP 주소와 여러 TCP/IP 프로토콜들의 기본 설정을 클라이언트에게 자동적으로 제공해주는 프로토콜!
- DNS의 주소 또한 제공!!

## 공유기
- 공유기는 하나의 공용 또는 공개된 public IP 주소를 이용하여 외부 인터넷과 통신하며, 내부 네트워크 디바이스에는 공용 IP 주소 대신에 내부적으로 사용되는 사설 IP 주소를 할당  
  
- 보통, 공유기는 내부 네트워크의 디바이스에 대한 IP 주소를 제공하는 데, 이것들은 사설 IP 주소입니다. 사설 IP 주소는 공인 인터넷에서 라우팅되지 않으며, 로컬 네트워크에서만 유효  
  
- 보통 172.xxx..를 사용, 127은 loopback이다.
> "루프백 주소"라고도 불리는 특별한 IP 주소인 "127.0.0.1" 또는 "localhost" 주소가 사용됩니다. 이 주소는 컴퓨터의 네트워크 인터페이스로 나가지 않고도 자기 자신으로 데이터를 보낼 수 있도록 하는 데 사용됩니다.

**데이터의 흐름**
1) 사용자의 디바이스에서 데이터가 보내지면, 이 데이터는 먼저 사용자의 내부 사설 IP 주소를 가진 디바이스에서 공유기로 전송이 된다!
2) 공유기는 이 데이터에 공공 IP 주소를 부여하고 외부 서버로 전송!  
   
**반대 방향 데이터 흐름**
1) 외부 서버에서 데이터가 사용자 디바이스로 오려면, 공유기는 내부 네트워크에서 어떤 디바이스(어떤 사설 IP)로 전송해야 하는지를 알아야 한다!
2) 이때는! '포트 번호'를 사용하여 어떤 디바이스로 보내야 하는지 결정!! 이 말은 즉, 한 공용 IP 주소 산하에 서로 다른 포트 번호를 사용해서 여러 서비스가 운영되고 통신된다는 것.

- IP 주소 255.255.255.255는 브로드캐스트 주소로, 이 주소로 데이터를 보내면 네트워크 내의 모든 디바이스에게 메시지가 전달된다

## 포트(Port)
: Application Layer와 Transport Layer 사이의 통로  

- IP가 할당된 컴퓨터는 수천 개의 포트를 사요알 수 있다(1~65535까지의 숫자로 구분.)
- Port의 구조 : | source | destination |  
(각각 포트의 시작점과 도착점, 1 ~ 1023은 이미 주인이 정해져있다.)

## 인터넷
: IP 기반의 네트워크
- 단순히 표준 프로토콜로 서로 대화하도록 약속된 컴퓨터들의 매우 큰 집합.

## 네트워크 주소 변환(Network Address Translation, = NAT)
- 공유기를 통해 로컬 IP가된 IP가 밖으로 나갈 때, public IP로 변환해주는 친구

## FireWalls 
: 패킷에 대한 검사 실행(방화벽)
- 로컬 네트워크 안의 호스트가 외부 세상으로 직접 연결하는 것을 금지

## Proxy Server 
- 내부와 외부 사이의 중계자 역할
- 로컬 네트워크 안의 호스트 -> Proxy Server로 요청 -> Proxy Server가 해당 웹 접근

## The Client/Server Model
- server : port를 열어 두고, 요청을 대기
  - client가 HTTP를 요청한다면, port 80으로 이동
  - Server가 이 요청을 받을 지, 안 받을 지 결정

## IETF RFCs
: 인터넷 표준 등을 정리해둔 문서형 웹
- [RFC(Request for Comments)](../RFC.md)









